---
- name: Checking if libvirtd is already installed
  shell: libvirtd --version | grep -oP '\d+\.\d+\.\d+'
  register: libvirtd_installed_version
  ignore_errors: true

- name: Debug
  debug:
    msg: Installed version {{ libvirtd_installed_version.stdout }}

# TODO: check if it is really needed to put root user and group on /etc/libvirt/qemu.conf
- name: Install libvirtd
  when: libvirtd_installed_version.stdout != libvirtd_version or update_libvirtd | bool == true
  block:
    - name: Cleanup leftovers from other libvirt installs
      apt:
        name:
          - libvirt-bin
          - libvirt-clients
          - libvirt-daemon
          - libvirt-daemon-config-network
          - libvirt-daemon-config-nwfilter
          - libvirt-daemon-driver-qemu
          - libvirt-daemon-system
          - libvirt-daemon-system-systemd
          - libvirt-dev:amd64
          # - libvirt-glib-1.0-0:amd64
          # - libvirt-glib-1.0-data
          # - libvirt0:amd64
          - python3-libvirt
        state: absent
        purge: yes
      become: true

    - name: Create groups
      group:
        name: "{{ item }}"
        state: present
      with_items:
        #- libvirt-qemu
        #- libvirt
        - libvirtd
      become: true

    - name: Cleanup leftovers from other installs
      file:
        path: "/usr/sbin/libvirtd"
        state: absent
      become: true

    - name: Install requirements
      apt:
        name:
          - git
          - build-essential
          - libtirpc-dev
          - xsltproc
          - libxml-xpath-perl
          - libyajl-dev
          - libdevmapper-dev
          # - libvirt-libs
          - libpciaccess-dev
          - systemtap-sdt-dev
          - uuid-dev
          - libtool
          - autoconf
          - pkg-config
          - libxml2
          - libxml2-utils
          - autopoint
          #- python-dev
          - libnuma-dev
          - numad
          - gettext
          - python3-libvirt
          - libgnutls28-dev
          - libxml2-dev
          # - libxml2
      become: true

    - name: Cloning libvirt git repo
      git:
        repo: 'https://gitlab.com/libvirt/libvirt.git'
        dest: /tmp/libvirt
        version: "v9.10.0"

    - name: configure using meson
      command: meson setup build -Dsystem=true  -Ddriver_qemu=enabled -Ddriver_libvirtd=enabled -Ddriver_remote=enabled
      args:
        chdir: /tmp/libvirt/

    - name: build using ninja
      command: ninja -C build
      args:
        chdir: /tmp/libvirt/

    - name: build using ninja
      command: sudo ninja -C build install
      args:
        chdir: /tmp/libvirt/
      become: true

    - name: Configure libvirtd access
      ansible.builtin.blockinfile:
        path: /etc/libvirt/libvirtd.conf
        create: true
        block: |
          unix_sock_group = "libvirtd"
          unix_sock_ro_perms = "0777"
          unix_sock_rw_perms = "0770"
          unix_sock_admin_perms = "0700"

      become: true

    - name: Cleanup leftovers from other installs
      file:
        path: "/etc/polkit-1/localauthority.conf.d/50-local.d"
        state: directory
      become: true

    - name: Copy polkit config file
      copy:
        src: libvirt-manage.pkla
        dest: /etc/polkit-1/localauthority.conf.d/50-local.d/libvirt-manage.pkla
        mode: 0640
      become: true

    - name: Copy QEMU config file /etc/libvirt
      copy:
        src: qemu.conf
        dest: /etc/libvirt/qemu.conf
        mode: 0640
      become: true

    - name: Make sure the service unit is running
      systemd:
        enabled: yes
        state: started
        name: libvirtd.service
        daemon_reload: true
      register: libvirtd_output
      tags:
        - systemd
      become: true
      failed_when: false
      # failed_when: libvirtd_output.status.ActiveState | default('') == "failed"

    #- debug:
    #    msg: "Libvirt daemon is {{ libvirtd_output.status.ActiveState | default('') }} since {{ libvirtd_output.status.ActiveEnterTimestamp | default('') }}"
    #  when: libvirtd_output.status.ActiveState != "inactive"
    #  tags:
    #    - systemd

    - name: Systemd output
      vars:
        msg: |
          systemd output:
          {{ libvirtd_output | to_nice_json }}
      debug:
        msg: "{{ msg.split('\n') }}"
      tags:
        - systemd
