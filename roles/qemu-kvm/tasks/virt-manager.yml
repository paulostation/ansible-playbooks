---
- name: Check for presence of required files
  stat:
    path: /usr/bin/{{ item }}
  loop:
    - virt-xml
    - virt-install
    - virt-clone
    - virt-manager
  register: file_stats

- name: Skip if all files are present
  debug:
    msg: "All required files are already present. {{ file_stats.results | map(attribute='stat.exists') | list }} {{ file_stats.results | map(attribute='stat.exists') | list is all }}"

- name: Install virt-manager
  when: not file_stats.results | map(attribute='stat.exists') | list is all or update_qemu_kvm | bool == true
  block:

    - name: Cleanup leftovers from other installs
      apt:
        name:
          - virt-manager
        state: absent
      become: true

    - name: Download virt-manager tarball
      get_url:
        url: https://releases.pagure.org/virt-manager/virt-manager-4.1.0.tar.gz
        dest: /tmp/virt-manager-4.1.0.tar.gz

    - name: Get sha256 sum of script
      stat:
        path: /tmp/virt-manager-4.1.0.tar.gz
        checksum_algorithm: sha256
        get_checksum: yes
      register: tarball

    - name: Verify sha256sum of tarball before execution.
      fail:
        msg: "Failure, file is not correct. Downloaded file sha256 sum is {{ tarball.stat.checksum }}"
      when: tarball.stat.checksum != '950681d7b32dc61669278ad94ef31da33109bf6fcf0426ed82dfd7379aa590a2'

    - name: Create {{ app_name }} process directory
      file:
        path: /tmp/virt-manager
        state: directory
      tags:
        - create-dir

    - name: Install pip dependencies within a user home directory
      pip:
        name: libvirt-python
        extra_args: --user
      environment:
        PKG_CONFIG_PATH: "{{ lookup('env', 'PKG_CONFIG_PATH') }}:/usr/lib64/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig"
      
    - name: Install dependencies
      apt:
        name:
          # - accountsservice-ubuntu-schemas
          # - gir1.2-libosinfo-1.0
          # - gir1.2-libvirt-glib-1.0
          - libgeonames-common
          - libgeonames0
          - libtimezonemap-data
          - libtimezonemap1
          - libtpms0
          # - libvirt-glib-1.0-0
          # - libvirt-l10n
          # - libvirt0
          - mdevctl
          # - python3-libvirt
          - python3-libxml2
          - swtpm
          - swtpm-tools
          - docutils-common
          # - python-libvirt
          # - virtinst
      become: true

    - name: Extract {{ app_name }} tarball into /opt
      unarchive:
        src: /tmp/virt-manager-4.1.0.tar.gz
        dest: /tmp/virt-manager
        remote_src: true
      tags:
        - create-dir

    - name: configure
      command: ./setup.py install
      args:
        chdir: /tmp/virt-manager/virt-manager-4.1.0
      become: true
      register: install_output

    - name: Install
      vars:
        msg: |
            install output:
            {{ install_output.stdout }}
      debug:
        msg: "{{ msg.split('\n') }}"

    - name: Add virt-manager to PYTHONPATH
      become: true
      blockinfile:
        path: /home/{{ ansible_user }}/.zshrc
        block: |
          # fix for virt-manager built locally
          export PYTHONPATH=/usr/share/virt-manager:$PYTHONPATH
          # always use system-wide daemon
          export VIRSH_DEFAULT_CONNECT_URI=qemu:///system
    
    # this is needed for virt-install
    - name: Set setuid bit on qemu-bridge-helper
      become: yes  # Run the command with escalated privileges (usually sudo)
      file:
        path: /usr/lib/qemu/qemu-bridge-helper
        mode: u+s
